name: build and test

on: push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-20.04]
        compiler:
          [
            "clang-6.0",
            "clang-7",
            "clang-8",
            "clang-9",
            "clang-10",
            "clang-11",
            "clang-12",
            "g++-7",
            "g++-8",
            "g++-9",
            "g++-10",
          ]
        cxx-std: ["c++11"]
        optim-level: ["-O3"]
    runs-on: ${{ matrix.runs-on }}
    env:
      CXX: ${{ matrix.compiler }}
      CXXFLAGS: -std=${{ matrix.cxx-std }} ${{ matrix.optim-level }} -Wall -Wextra
      DEBIAN_FRONTEND: "noninteractive"
    steps:
      - uses: actions/checkout@v2
      - name: Install compiler
        if: startsWith(matrix.runs-on, 'ubuntu')
        run: |
          printenv
          sudo apt update -qq 2&> 1 || true
          DEBIAN_FRONTEND="noninteractive" sudo apt install -y lsb-release software-properties-common curl libclang-11-dev

          DEBIAN_FRONTEND="noninteractive" sudo apt update 
          DEBIAN_FRONTEND="noninteractive" sudo apt install -y build-essential ${{ matrix.compiler }}

      - name: Build-and-run
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_CXX_COMPILER=${CXX} ..
          make -j`nproc`
          clang --version
          make test
